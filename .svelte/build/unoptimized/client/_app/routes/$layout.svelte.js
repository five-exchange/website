/* src/routes/$layout.svelte generated by Svelte v3.31.2 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	create_slot,
	detach,
	element,
	init,
	insert,
	query_selector_all,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out,
	update_slot
} from "../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let t0;
	let div4;
	let div3;
	let div1;
	let div0;
	let t1;
	let t2;
	let t3;
	let div2;
	let a0;
	let t4;
	let t5;
	let a1;
	let t6;
	let t7;
	let a2;
	let t8;
	let t9;
	let current;
	const default_slot_template = /*#slots*/ ctx[1].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);

	return {
		c() {
			t0 = space();
			div4 = element("div");
			div3 = element("div");
			div1 = element("div");
			div0 = element("div");
			t1 = text("5");
			t2 = text("\n      Five");
			t3 = space();
			div2 = element("div");
			a0 = element("a");
			t4 = text("about");
			t5 = space();
			a1 = element("a");
			t6 = text("products");
			t7 = space();
			a2 = element("a");
			t8 = text("developers");
			t9 = space();
			if (default_slot) default_slot.c();
			this.h();
		},
		l(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-vrw4d6\"]", document.head);
			head_nodes.forEach(detach);
			t0 = claim_space(nodes);
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t1 = claim_text(div0_nodes, "5");
			div0_nodes.forEach(detach);
			t2 = claim_text(div1_nodes, "\n      Five");
			div1_nodes.forEach(detach);
			t3 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			a0 = claim_element(div2_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t4 = claim_text(a0_nodes, "about");
			a0_nodes.forEach(detach);
			t5 = claim_space(div2_nodes);
			a1 = claim_element(div2_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			t6 = claim_text(a1_nodes, "products");
			a1_nodes.forEach(detach);
			t7 = claim_space(div2_nodes);
			a2 = claim_element(div2_nodes, "A", { href: true });
			var a2_nodes = children(a2);
			t8 = claim_text(a2_nodes, "developers");
			a2_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			div4_nodes.forEach(detach);
			t9 = claim_space(nodes);
			if (default_slot) default_slot.l(nodes);
			this.h();
		},
		h() {
			document.title = "- Five";
			attr(div0, "class", " font-bold mr-4 border-primary p-3 flex border-4 rounded-full w-6 h-6 justify-center items-center");
			attr(div1, "class", "flex items-center text-primary text-lg");
			attr(a0, "href", "/about");
			attr(a1, "href", "/products");
			attr(a2, "href", "/products");
			attr(div2, "class", "flex space-x-2 text-primary");
			attr(div3, "class", "justify-between flex max-w-screen-2xl mx-auto");
			attr(div4, "class", "fixed p-2 px-8 w-full pt-12");
		},
		m(target, anchor) {
			insert(target, t0, anchor);
			insert(target, div4, anchor);
			append(div4, div3);
			append(div3, div1);
			append(div1, div0);
			append(div0, t1);
			append(div1, t2);
			append(div3, t3);
			append(div3, div2);
			append(div2, a0);
			append(a0, t4);
			append(div2, t5);
			append(div2, a1);
			append(a1, t6);
			append(div2, t7);
			append(div2, a2);
			append(a2, t8);
			insert(target, t9, anchor);

			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 1) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[0], dirty, null, null);
				}
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(t0);
			if (detaching) detach(div4);
			if (detaching) detach(t9);
			if (default_slot) default_slot.d(detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;

	$$self.$$set = $$props => {
		if ("$$scope" in $$props) $$invalidate(0, $$scope = $$props.$$scope);
	};

	return [$$scope, slots];
}

class $layout extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default $layout;
//# sourceMappingURL=$layout.svelte.js.map
